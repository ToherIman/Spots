[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nSession = Package.session.Session;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nAccounts = Package['accounts-base'].Accounts;\nVK = Package['mrt:accounts-vk'].VK;\nGoogleMaps = Package['dburles:google-maps'].GoogleMaps;\nGeolocation = Package['mdg:geolocation'].Geolocation;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nmeteorInstall = Package.modules.meteorInstall;\nBuffer = Package.modules.Buffer;\nprocess = Package.modules.process;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nPromise = Package.promise.Promise;\nServiceConfiguration = Package['service-configuration'].ServiceConfiguration;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"client\":{\"template.index.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// client/template.index.js                                                                                       //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n                                                                                                                  // 1\nTemplate.body.addContent((function() {                                                                            // 2\n  var view = this;                                                                                                // 3\n  return [ HTML.P(\"\\n    \", Spacebars.include(view.lookupTemplate(\"loginButtons\")), \"\\n  \"), \"\\n\\n  \", HTML.DIV({\n    \"class\": \"mainblock\"                                                                                          // 5\n  }, \"\\n    \", Spacebars.include(view.lookupTemplate(\"map\")), \"\\n    \", Spacebars.include(view.lookupTemplate(\"messagesBlock\")), \"\\n  \"), \"\\n  \", HTML.DIV({\n    style: \"display: flex\"                                                                                        // 7\n  }, \"\\n  \", HTML.SPAN(Spacebars.include(view.lookupTemplate(\"rooms\"))), \"\\n  \", HTML.SPAN(Spacebars.include(view.lookupTemplate(\"users\"))), \"\\n  \", HTML.SPAN(Spacebars.include(view.lookupTemplate(\"spot\"))), \"\\n \") ];\n}));                                                                                                              // 9\nMeteor.startup(Template.body.renderToDocument);                                                                   // 10\n                                                                                                                  // 11\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.map.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// client/template.map.js                                                                                         //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n                                                                                                                  // 1\nTemplate.__checkName(\"map\");                                                                                      // 2\nTemplate[\"map\"] = new Template(\"Template.map\", (function() {                                                      // 3\n  var view = this;                                                                                                // 4\n  return HTML.DIV({                                                                                               // 5\n    \"class\": \"map-container\"                                                                                      // 6\n  }, \"\\n    \", Blaze.Unless(function() {                                                                          // 7\n    return Spacebars.call(view.lookup(\"geolocationError\"));                                                       // 8\n  }, function() {                                                                                                 // 9\n    return [ \"\\n      \", Blaze._TemplateWith(function() {                                                         // 10\n      return {                                                                                                    // 11\n        name: Spacebars.call(\"map\"),                                                                              // 12\n        options: Spacebars.call(view.lookup(\"mapOptions\"))                                                        // 13\n      };                                                                                                          // 14\n    }, function() {                                                                                               // 15\n      return Spacebars.include(view.lookupTemplate(\"googleMap\"));                                                 // 16\n    }), \"\\n      \" ];                                                                                             // 17\n  }, function() {                                                                                                 // 18\n    return [ \"\\n      Geolocation faild: \", Blaze.View(\"lookup:geolocationError\", function() {                    // 19\n      return Spacebars.mustache(view.lookup(\"geolocationError\"));                                                 // 20\n    }), \"\\n      \" ];                                                                                             // 21\n  }), \"\\n  \");                                                                                                    // 22\n}));                                                                                                              // 23\n                                                                                                                  // 24\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.messages.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// client/template.messages.js                                                                                    //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n                                                                                                                  // 1\nTemplate.__checkName(\"messagesBlock\");                                                                            // 2\nTemplate[\"messagesBlock\"] = new Template(\"Template.messagesBlock\", (function() {                                  // 3\n  var view = this;                                                                                                // 4\n  return [ HTML.UL(\"\\n    \", Blaze.Each(function() {                                                              // 5\n    return Spacebars.call(view.lookup(\"messages\"));                                                               // 6\n  }, function() {                                                                                                 // 7\n    return [ \"\\n      \", Spacebars.include(view.lookupTemplate(\"message\")), \"\\n    \" ];                           // 8\n  }), \"\\n  \"), HTML.Raw('\\n  <form class=\"new-message\">\\n    <input type=\"text\" name=\"message\" placeholder=\"Type new message\">\\n  </form>') ];\n}));                                                                                                              // 10\n                                                                                                                  // 11\nTemplate.__checkName(\"message\");                                                                                  // 12\nTemplate[\"message\"] = new Template(\"Template.message\", (function() {                                              // 13\n  var view = this;                                                                                                // 14\n  return HTML.LI(\"\\n   \", Blaze.View(\"lookup:text\", function() {                                                  // 15\n    return Spacebars.mustache(view.lookup(\"text\"));                                                               // 16\n  }), \" \", Blaze.View(\"lookup:createdAt\", function() {                                                            // 17\n    return Spacebars.mustache(view.lookup(\"createdAt\"));                                                          // 18\n  }), \" \", Blaze.View(\"lookup:username\", function() {                                                             // 19\n    return Spacebars.mustache(view.lookup(\"username\"));                                                           // 20\n  }), \"\\n \");                                                                                                     // 21\n}));                                                                                                              // 22\n                                                                                                                  // 23\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.rooms.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// client/template.rooms.js                                                                                       //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n                                                                                                                  // 1\nTemplate.__checkName(\"rooms\");                                                                                    // 2\nTemplate[\"rooms\"] = new Template(\"Template.rooms\", (function() {                                                  // 3\n  var view = this;                                                                                                // 4\n  return [ HTML.Raw('<p>\\n    Rooms:\\n  </p>\\n  <form class=\"new-room\">\\n    <input type=\"text\" name=\"text\" placeholder=\"Enter room name\">\\n  </form>\\n\\n  '), Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"rooms\"));                                                                  // 6\n  }, function() {                                                                                                 // 7\n    return [ \"\\n    \", HTML.LI(\"\\n      \", Blaze.View(\"lookup:name\", function() {                                 // 8\n      return Spacebars.mustache(view.lookup(\"name\"));                                                             // 9\n    }), \"\\n    \"), \"\\n  \" ];                                                                                      // 10\n  }) ];                                                                                                           // 11\n}));                                                                                                              // 12\n                                                                                                                  // 13\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.spot.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// client/template.spot.js                                                                                        //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n                                                                                                                  // 1\nTemplate.__checkName(\"spot\");                                                                                     // 2\nTemplate[\"spot\"] = new Template(\"Template.spot\", (function() {                                                    // 3\n  var view = this;                                                                                                // 4\n  return HTML.P(HTML.Raw('\\n    <p>\\n      Spot Info\\n      <button class=\"addSpot\">Edit spot info</button>\\n    </p>\\n    '), Blaze.If(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"spot\"), \"editing\"));                                         // 6\n  }, function() {                                                                                                 // 7\n    return [ \"\\n    \", HTML.LI(\"\\n      SpotID: \", Blaze.View(\"lookup:spot._id\", function() {                     // 8\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"spot\"), \"_id\"));                                       // 9\n    }), \"\\n    \"), \"\\n    \", HTML.LI(\"\\n      UserID: \", Blaze.View(\"lookup:spot.user\", function() {              // 10\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"spot\"), \"user\"));                                      // 11\n    }), \"\\n    \"), \"\\n    \", HTML.FORM({                                                                          // 12\n      \"class\": \"new-spot\"                                                                                         // 13\n    }, \"\\n      \", HTML.LI(\"\\n        Spot Name\", HTML.INPUT({                                                    // 14\n      type: \"text\",                                                                                               // 15\n      name: \"spotName\",                                                                                           // 16\n      placeholder: function() {                                                                                   // 17\n        return Blaze.If(function() {                                                                              // 18\n          return Spacebars.call(Spacebars.dot(view.lookup(\"spot\"), \"name\"));                                      // 19\n        }, function() {                                                                                           // 20\n          return [ \" \", Blaze.View(\"lookup:spot.name\", function() {                                               // 21\n            return Spacebars.mustache(Spacebars.dot(view.lookup(\"spot\"), \"name\"));                                // 22\n          }), \" \" ];                                                                                              // 23\n        }, function() {                                                                                           // 24\n          return \" Type new \";                                                                                    // 25\n        });                                                                                                       // 26\n      }                                                                                                           // 27\n    }), \"\\n      \"), \"\\n      \", HTML.LI(\"\\n        Spot Type\", HTML.INPUT({                                      // 28\n      type: \"text\",                                                                                               // 29\n      name: \"spotType\",                                                                                           // 30\n      placeholder: function() {                                                                                   // 31\n        return Blaze.If(function() {                                                                              // 32\n          return Spacebars.call(Spacebars.dot(view.lookup(\"spot\"), \"type\"));                                      // 33\n        }, function() {                                                                                           // 34\n          return [ \" \", Blaze.View(\"lookup:spot.type\", function() {                                               // 35\n            return Spacebars.mustache(Spacebars.dot(view.lookup(\"spot\"), \"type\"));                                // 36\n          }), \" \" ];                                                                                              // 37\n        }, function() {                                                                                           // 38\n          return \" Add type of spot \";                                                                            // 39\n        });                                                                                                       // 40\n      }                                                                                                           // 41\n    }), \"\\n      \"), \"\\n      \", HTML.LI(\"\\n        Description \", HTML.INPUT({                                   // 42\n      type: \"text\",                                                                                               // 43\n      name: \"description\",                                                                                        // 44\n      placeholder: function() {                                                                                   // 45\n        return Blaze.If(function() {                                                                              // 46\n          return Spacebars.call(Spacebars.dot(view.lookup(\"spot\"), \"descr\"));                                     // 47\n        }, function() {                                                                                           // 48\n          return [ \" \", Blaze.View(\"lookup:spot.descr\", function() {                                              // 49\n            return Spacebars.mustache(Spacebars.dot(view.lookup(\"spot\"), \"descr\"));                               // 50\n          }), \" \" ];                                                                                              // 51\n        }, function() {                                                                                           // 52\n          return \" Add description \";                                                                             // 53\n        });                                                                                                       // 54\n      }                                                                                                           // 55\n    }), \"\\n      \"), \"\\n      \", HTML.INPUT({                                                                     // 56\n      type: \"submit\",                                                                                             // 57\n      value: \"Submit\"                                                                                             // 58\n    }), \"\\n    \"), \"\\n    \" ];                                                                                    // 59\n  }, function() {                                                                                                 // 60\n    return [ \"\\n    \", HTML.LI(\"\\n      SpotID: \", Blaze.View(\"lookup:spot._id\", function() {                     // 61\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"spot\"), \"_id\"));                                       // 62\n    }), \"\\n    \"), \"\\n    \", HTML.LI(\"\\n      UserID: \", Blaze.View(\"lookup:spot.user\", function() {              // 63\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"spot\"), \"user\"));                                      // 64\n    }), \"\\n    \"), \"\\n    \", Blaze.If(function() {                                                                // 65\n      return Spacebars.call(Spacebars.dot(view.lookup(\"spot\"), \"name\"));                                          // 66\n    }, function() {                                                                                               // 67\n      return [ \"\\n    \", HTML.LI(\"\\n      Spot Name \", Blaze.View(\"lookup:spot.name\", function() {                // 68\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"spot\"), \"name\"));                                    // 69\n      }), \"\\n    \"), \"\\n    \" ];                                                                                  // 70\n    }), \"\\n    \", Blaze.If(function() {                                                                           // 71\n      return Spacebars.call(Spacebars.dot(view.lookup(\"spot\"), \"type\"));                                          // 72\n    }, function() {                                                                                               // 73\n      return [ \"\\n    \", HTML.LI(\"\\n      Spot Type \", Blaze.View(\"lookup:spot.type\", function() {                // 74\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"spot\"), \"type\"));                                    // 75\n      }), \"\\n    \"), \"\\n    \" ];                                                                                  // 76\n    }), \"\\n    \", Blaze.If(function() {                                                                           // 77\n      return Spacebars.call(Spacebars.dot(view.lookup(\"spot\"), \"descr\"));                                         // 78\n    }, function() {                                                                                               // 79\n      return [ \"\\n    \", HTML.LI(\"\\n      Spot Description \", Blaze.View(\"lookup:spot.descr\", function() {        // 80\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"spot\"), \"descr\"));                                   // 81\n      }), \"\\n    \"), \"\\n    \" ];                                                                                  // 82\n    }), \"\\n    \" ];                                                                                               // 83\n  }), \"\\n\\n  \");                                                                                                  // 84\n}));                                                                                                              // 85\n                                                                                                                  // 86\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"template.users.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// client/template.users.js                                                                                       //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\n                                                                                                                  // 1\nTemplate.__checkName(\"users\");                                                                                    // 2\nTemplate[\"users\"] = new Template(\"Template.users\", (function() {                                                  // 3\n  var view = this;                                                                                                // 4\n  return [ HTML.Raw('<p>\\n    Users:\\n  </p>\\n  <form class=\"user\">\\n    <input type=\"text\" name=\"user\" placeholder=\"find users\">\\n  </form>\\n  '), Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"users\"));                                                                  // 6\n  }, function() {                                                                                                 // 7\n    return [ \"\\n    \", HTML.LI(\"\\n      \", Blaze.View(\"lookup:username\", function() {                             // 8\n      return Spacebars.mustache(view.lookup(\"username\"));                                                         // 9\n    }), \"\\n    \"), \"\\n  \" ];                                                                                      // 10\n  }) ];                                                                                                           // 11\n}));                                                                                                              // 12\n                                                                                                                  // 13\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"map.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// client/map.js                                                                                                  //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\nvar MAP_ZOOM = 15;                                                                                                // 1\n                                                                                                                  //\nMeteor.startup(function () {                                                                                      // 3\n  GoogleMaps.load();                                                                                              // 4\n});                                                                                                               //\n                                                                                                                  //\nTemplate.map.onCreated(function () {                                                                              // 7\n  var self = this;                                                                                                // 8\n                                                                                                                  //\n  GoogleMaps.ready('map', function (map) {                                                                        // 10\n    var marker = void 0;                                                                                          // 11\n                                                                                                                  //\n    self.autorun(function () {                                                                                    // 13\n      var latLng = Geolocation.latLng();                                                                          // 14\n      //Write user position to db                                                                                 //\n      console.log(latLng);                                                                                        // 13\n      var userId = Meteor.userId();                                                                               // 17\n      var userPosition = Position.findOne({ user: userId });                                                      // 18\n                                                                                                                  //\n      if (!userPosition && Meteor.userId()) {                                                                     // 20\n        Position.insert({                                                                                         // 21\n          user: Meteor.userId(),                                                                                  // 22\n          latLng: latLng                                                                                          // 23\n        });                                                                                                       //\n      } else {                                                                                                    //\n        Position.update({ _id: userPosition._id }, { $set: { latLng: latLng } });                                 // 27\n      }                                                                                                           //\n      console.log(userPosition.latLng);                                                                           // 29\n      //Finished writing user position to db                                                                      //\n      if (!latLng) return;                                                                                        // 13\n                                                                                                                  //\n      if (!marker) {                                                                                              // 34\n        marker = new google.maps.Marker({                                                                         // 35\n          position: new google.maps.LatLng(latLng.lat, latLng.lng),                                               // 36\n          map: map.instance,                                                                                      // 37\n          icon: '/public/h.pgn'                                                                                   // 38\n        });                                                                                                       //\n      } else {                                                                                                    //\n        marker.setPosition(latLng);                                                                               // 43\n      }                                                                                                           //\n      map.instance.setCenter(marker.getPosition());                                                               // 45\n      map.instance.setZoom(MAP_ZOOM);                                                                             // 46\n    });                                                                                                           //\n                                                                                                                  //\n    //Add custom markers on map                                                                                   //\n    google.maps.event.addListener(map.instance, 'click', function (event) {                                       // 10\n      Spots.insert({ lat: event.latLng.lat(), lng: event.latLng.lng(), user: Meteor.userId() });                  // 53\n      console.log(Spots.find().fetch());                                                                          // 54\n    });                                                                                                           //\n                                                                                                                  //\n    var markers = {};                                                                                             // 57\n                                                                                                                  //\n    Spots.find().observe({                                                                                        // 59\n      added: function () {                                                                                        // 60\n        function added(document) {                                                                                //\n          var marker = new google.maps.Marker({                                                                   // 61\n            draggable: true,                                                                                      // 62\n            animation: google.maps.Animation.DROP,                                                                // 63\n            position: new google.maps.LatLng(document.lat, document.lng),                                         // 64\n            label: 'S',                                                                                           // 65\n            map: map.instance,                                                                                    // 66\n            id: document._id                                                                                      // 67\n          });                                                                                                     //\n                                                                                                                  //\n          google.maps.event.addListener(marker, 'dragend', function (event) {                                     // 70\n            Spots.update(marker.id, { $set: { lat: event.latLng.lat(), lng: event.latLng.lng() } });              // 71\n          });                                                                                                     //\n                                                                                                                  //\n          google.maps.event.addListener(marker, 'click', function (event) {                                       // 74\n            var selectedMarker = marker.id;                                                                       // 75\n            Session.set('place', marker.id);                                                                      // 76\n            console.log(selectedMarker);                                                                          // 77\n          });                                                                                                     //\n          markers[document._id] = marker;                                                                         // 79\n        }                                                                                                         //\n                                                                                                                  //\n        return added;                                                                                             //\n      }(),                                                                                                        //\n                                                                                                                  //\n      changed: function () {                                                                                      // 81\n        function changed(newDocument, oldDocument) {                                                              // 81\n          markers[newDocument._id].setPosition({ lat: newDocument.lat, lng: newDocument.lng });                   // 82\n        }                                                                                                         //\n                                                                                                                  //\n        return changed;                                                                                           //\n      }(),                                                                                                        //\n      removed: function () {                                                                                      // 84\n        function removed(oldDocument) {                                                                           // 84\n          markers[oldDocument._id].setMap(null);                                                                  // 85\n          google.maps.event.clearInstanceListeners(markers[oldDocument._id]);                                     // 86\n          delete markers[oldDocument._id];                                                                        // 87\n        }                                                                                                         //\n                                                                                                                  //\n        return removed;                                                                                           //\n      }()                                                                                                         //\n    });                                                                                                           //\n  });                                                                                                             //\n});                                                                                                               //\n                                                                                                                  //\nTemplate.map.helpers({                                                                                            // 95\n  geolocationError: function () {                                                                                 // 96\n    function geolocationError() {                                                                                 // 96\n      var error = Geolocation.error();                                                                            // 97\n      return error && error.message;                                                                              // 98\n    }                                                                                                             //\n                                                                                                                  //\n    return geolocationError;                                                                                      //\n  }(),                                                                                                            //\n  mapOptions: function () {                                                                                       // 100\n    function mapOptions() {                                                                                       // 100\n      var latLng = Geolocation.latLng();                                                                          // 101\n      if (GoogleMaps.loaded() && latLng) {                                                                        // 102\n        return {                                                                                                  // 103\n          center: new google.maps.LatLng(latLng.lat, latLng.lng),                                                 // 104\n          zoom: MAP_ZOOM                                                                                          // 105\n        };                                                                                                        //\n      }                                                                                                           //\n    }                                                                                                             //\n                                                                                                                  //\n    return mapOptions;                                                                                            //\n  }()                                                                                                             //\n});                                                                                                               //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"messages.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// client/messages.js                                                                                             //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\nTemplate.messagesBlock.helpers({                                                                                  // 1\n  messages: function () {                                                                                         // 2\n    function messages() {                                                                                         // 2\n      return Messages.find({});                                                                                   // 3\n    }                                                                                                             //\n                                                                                                                  //\n    return messages;                                                                                              //\n  }()                                                                                                             //\n});                                                                                                               //\n                                                                                                                  //\nTemplate.messagesBlock.events({                                                                                   // 7\n  \"submit .new-message\": function () {                                                                            // 8\n    function submitNewMessage(event) {                                                                            // 8\n      event.preventDefault();                                                                                     // 9\n      var text = event.target.message.value;                                                                      // 10\n                                                                                                                  //\n      Messages.insert({                                                                                           // 12\n        text: text,                                                                                               // 13\n        createdAt: new Date(),                                                                                    // 14\n        owner: Meteor.userId(),                                                                                   // 15\n        username: Meteor.user().username                                                                          // 16\n      });                                                                                                         //\n      event.target.message.value = \"\";                                                                            // 18\n    }                                                                                                             //\n                                                                                                                  //\n    return submitNewMessage;                                                                                      //\n  }()                                                                                                             //\n});                                                                                                               //\n                                                                                                                  //\nAccounts.ui.config({                                                                                              // 22\n  passwordSignupFields: \"USERNAME_ONLY\"                                                                           // 23\n});                                                                                                               //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"rooms.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// client/rooms.js                                                                                                //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\nTemplate.rooms.helpers({                                                                                          // 1\n  rooms: function () {                                                                                            // 2\n    function rooms() {                                                                                            // 2\n      return Rooms.find({});                                                                                      // 3\n    }                                                                                                             //\n                                                                                                                  //\n    return rooms;                                                                                                 //\n  }()                                                                                                             //\n});                                                                                                               //\n                                                                                                                  //\nTemplate.rooms.events({                                                                                           // 7\n  \"submit .new-room\": function () {                                                                               // 8\n    function submitNewRoom(event) {                                                                               // 8\n      event.preventDefault();                                                                                     // 9\n      var roomName = event.target.text.value;                                                                     // 10\n                                                                                                                  //\n      Rooms.insert({                                                                                              // 12\n        name: roomName,                                                                                           // 13\n        createdAt: new Date(),                                                                                    // 14\n        owner: Meteor.userId(),                                                                                   // 15\n        guests: []                                                                                                // 16\n      });                                                                                                         //\n      event.target.text.value = \"\";                                                                               // 18\n    }                                                                                                             //\n                                                                                                                  //\n    return submitNewRoom;                                                                                         //\n  }()                                                                                                             //\n});                                                                                                               //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"spot.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// client/spot.js                                                                                                 //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\nTemplate.spot.helpers({                                                                                           // 1\n  spot: function () {                                                                                             // 2\n    function spot() {                                                                                             // 2\n      return Spots.findOne(Session.get('place'));                                                                 // 3\n    }                                                                                                             //\n                                                                                                                  //\n    return spot;                                                                                                  //\n  }()                                                                                                             //\n});                                                                                                               //\n                                                                                                                  //\nTemplate.spot.events({                                                                                            // 7\n  \"click .addSpot\": function () {                                                                                 // 8\n    function clickAddSpot() {                                                                                     //\n      var spot = Session.get('place');                                                                            // 9\n      var cheked = Spots.findOne(spot).editing;                                                                   // 10\n      Spots.update(spot, { $set: { editing: !cheked } });                                                         // 11\n      console.log(cheked);                                                                                        // 12\n    }                                                                                                             //\n                                                                                                                  //\n    return clickAddSpot;                                                                                          //\n  }(),                                                                                                            //\n  \"submit .new-spot\": function () {                                                                               // 14\n    function submitNewSpot(event) {                                                                               //\n      event.preventDefault();                                                                                     // 15\n      var name = event.target.spotName.value;                                                                     // 16\n      var typeSpot = event.target.spotType.value;                                                                 // 17\n      var descr = event.target.description.value;                                                                 // 18\n      var spot = Session.get('place');                                                                            // 19\n      var cheked = Spots.findOne(spot).editing;                                                                   // 20\n      Spots.update(spot, { $set: {                                                                                // 21\n          \"name\": name,                                                                                           // 22\n          \"type\": typeSpot,                                                                                       // 23\n          \"descr\": descr,                                                                                         // 24\n          \"editing\": !cheked                                                                                      // 25\n        }                                                                                                         //\n      });                                                                                                         //\n    }                                                                                                             //\n                                                                                                                  //\n    return submitNewSpot;                                                                                         //\n  }()                                                                                                             //\n});                                                                                                               //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"users.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// client/users.js                                                                                                //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\nTemplate.users.helpers({                                                                                          // 1\n  users: function () {                                                                                            // 2\n    function users() {                                                                                            // 2\n      return Meteor.users.find();                                                                                 // 3\n    }                                                                                                             //\n                                                                                                                  //\n    return users;                                                                                                 //\n  }()                                                                                                             //\n});                                                                                                               //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"lib\":{\"collections.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                                //\n// lib/collections.js                                                                                             //\n//                                                                                                                //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                                  //\nMessages = new Mongo.Collection('messages');                                                                      // 1\nRooms = new Mongo.Collection('rooms');                                                                            // 2\nPosition = new Mongo.Collection('position');                                                                      // 3\nSpots = new Mongo.Collection('spots');                                                                            // 4\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}}},{\"extensions\":[\".js\",\".json\",\".html\",\".css\"]});\nrequire(\"./client/template.index.js\");\nrequire(\"./client/template.map.js\");\nrequire(\"./client/template.messages.js\");\nrequire(\"./client/template.rooms.js\");\nrequire(\"./client/template.spot.js\");\nrequire(\"./client/template.users.js\");\nrequire(\"./lib/collections.js\");\nrequire(\"./client/map.js\");\nrequire(\"./client/messages.js\");\nrequire(\"./client/rooms.js\");\nrequire(\"./client/spot.js\");\nrequire(\"./client/users.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["/client/template.index.js","/client/template.map.js","/client/template.messages.js","/client/template.rooms.js","/client/template.spot.js","/client/template.users.js","/client/map.js","/client/messages.js","/client/rooms.js","/client/spot.js","/client/users.js","/lib/collections.js"],"names":[],"mappings":";;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uH;;;;;;;;;;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uH;;;;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uH;;;;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uH;;;;;;;;;;;ACZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uH;;;;;;;;;;;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uH;;;;;;;;;;;ACZA,IAAI,WAAW,EAAX;;AAEJ,OAAO,OAAP,CAAe,YAAW;AACxB,aAAW,IAAX,GADwB;CAAX,CAAf;;AAIA,SAAS,GAAT,CAAa,SAAb,CAAuB,YAAW;AAChC,MAAI,OAAO,IAAP,CAD4B;;AAGhC,aAAW,KAAX,CAAiB,KAAjB,EAAwB,UAAS,GAAT,EAAc;AACpC,QAAI,eAAJ,CADoC;;AAGpC,SAAK,OAAL,CAAa,YAAY;AACvB,UAAI,SAAS,YAAY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","file":"/app.js","sourcesContent":["\nTemplate.body.addContent((function() {\n  var view = this;\n  return [ HTML.P(\"\\n    \", Spacebars.include(view.lookupTemplate(\"loginButtons\")), \"\\n  \"), \"\\n\\n  \", HTML.DIV({\n    \"class\": \"mainblock\"\n  }, \"\\n    \", Spacebars.include(view.lookupTemplate(\"map\")), \"\\n    \", Spacebars.include(view.lookupTemplate(\"messagesBlock\")), \"\\n  \"), \"\\n  \", HTML.DIV({\n    style: \"display: flex\"\n  }, \"\\n  \", HTML.SPAN(Spacebars.include(view.lookupTemplate(\"rooms\"))), \"\\n  \", HTML.SPAN(Spacebars.include(view.lookupTemplate(\"users\"))), \"\\n  \", HTML.SPAN(Spacebars.include(view.lookupTemplate(\"spot\"))), \"\\n \") ];\n}));\nMeteor.startup(Template.body.renderToDocument);\n","\nTemplate.__checkName(\"map\");\nTemplate[\"map\"] = new Template(\"Template.map\", (function() {\n  var view = this;\n  return HTML.DIV({\n    \"class\": \"map-container\"\n  }, \"\\n    \", Blaze.Unless(function() {\n    return Spacebars.call(view.lookup(\"geolocationError\"));\n  }, function() {\n    return [ \"\\n      \", Blaze._TemplateWith(function() {\n      return {\n        name: Spacebars.call(\"map\"),\n        options: Spacebars.call(view.lookup(\"mapOptions\"))\n      };\n    }, function() {\n      return Spacebars.include(view.lookupTemplate(\"googleMap\"));\n    }), \"\\n      \" ];\n  }, function() {\n    return [ \"\\n      Geolocation faild: \", Blaze.View(\"lookup:geolocationError\", function() {\n      return Spacebars.mustache(view.lookup(\"geolocationError\"));\n    }), \"\\n      \" ];\n  }), \"\\n  \");\n}));\n","\nTemplate.__checkName(\"messagesBlock\");\nTemplate[\"messagesBlock\"] = new Template(\"Template.messagesBlock\", (function() {\n  var view = this;\n  return [ HTML.UL(\"\\n    \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"messages\"));\n  }, function() {\n    return [ \"\\n      \", Spacebars.include(view.lookupTemplate(\"message\")), \"\\n    \" ];\n  }), \"\\n  \"), HTML.Raw('\\n  <form class=\"new-message\">\\n    <input type=\"text\" name=\"message\" placeholder=\"Type new message\">\\n  </form>') ];\n}));\n\nTemplate.__checkName(\"message\");\nTemplate[\"message\"] = new Template(\"Template.message\", (function() {\n  var view = this;\n  return HTML.LI(\"\\n   \", Blaze.View(\"lookup:text\", function() {\n    return Spacebars.mustache(view.lookup(\"text\"));\n  }), \" \", Blaze.View(\"lookup:createdAt\", function() {\n    return Spacebars.mustache(view.lookup(\"createdAt\"));\n  }), \" \", Blaze.View(\"lookup:username\", function() {\n    return Spacebars.mustache(view.lookup(\"username\"));\n  }), \"\\n \");\n}));\n","\nTemplate.__checkName(\"rooms\");\nTemplate[\"rooms\"] = new Template(\"Template.rooms\", (function() {\n  var view = this;\n  return [ HTML.Raw('<p>\\n    Rooms:\\n  </p>\\n  <form class=\"new-room\">\\n    <input type=\"text\" name=\"text\" placeholder=\"Enter room name\">\\n  </form>\\n\\n  '), Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"rooms\"));\n  }, function() {\n    return [ \"\\n    \", HTML.LI(\"\\n      \", Blaze.View(\"lookup:name\", function() {\n      return Spacebars.mustache(view.lookup(\"name\"));\n    }), \"\\n    \"), \"\\n  \" ];\n  }) ];\n}));\n","\nTemplate.__checkName(\"spot\");\nTemplate[\"spot\"] = new Template(\"Template.spot\", (function() {\n  var view = this;\n  return HTML.P(HTML.Raw('\\n    <p>\\n      Spot Info\\n      <button class=\"addSpot\">Edit spot info</button>\\n    </p>\\n    '), Blaze.If(function() {\n    return Spacebars.call(Spacebars.dot(view.lookup(\"spot\"), \"editing\"));\n  }, function() {\n    return [ \"\\n    \", HTML.LI(\"\\n      SpotID: \", Blaze.View(\"lookup:spot._id\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"spot\"), \"_id\"));\n    }), \"\\n    \"), \"\\n    \", HTML.LI(\"\\n      UserID: \", Blaze.View(\"lookup:spot.user\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"spot\"), \"user\"));\n    }), \"\\n    \"), \"\\n    \", HTML.FORM({\n      \"class\": \"new-spot\"\n    }, \"\\n      \", HTML.LI(\"\\n        Spot Name\", HTML.INPUT({\n      type: \"text\",\n      name: \"spotName\",\n      placeholder: function() {\n        return Blaze.If(function() {\n          return Spacebars.call(Spacebars.dot(view.lookup(\"spot\"), \"name\"));\n        }, function() {\n          return [ \" \", Blaze.View(\"lookup:spot.name\", function() {\n            return Spacebars.mustache(Spacebars.dot(view.lookup(\"spot\"), \"name\"));\n          }), \" \" ];\n        }, function() {\n          return \" Type new \";\n        });\n      }\n    }), \"\\n      \"), \"\\n      \", HTML.LI(\"\\n        Spot Type\", HTML.INPUT({\n      type: \"text\",\n      name: \"spotType\",\n      placeholder: function() {\n        return Blaze.If(function() {\n          return Spacebars.call(Spacebars.dot(view.lookup(\"spot\"), \"type\"));\n        }, function() {\n          return [ \" \", Blaze.View(\"lookup:spot.type\", function() {\n            return Spacebars.mustache(Spacebars.dot(view.lookup(\"spot\"), \"type\"));\n          }), \" \" ];\n        }, function() {\n          return \" Add type of spot \";\n        });\n      }\n    }), \"\\n      \"), \"\\n      \", HTML.LI(\"\\n        Description \", HTML.INPUT({\n      type: \"text\",\n      name: \"description\",\n      placeholder: function() {\n        return Blaze.If(function() {\n          return Spacebars.call(Spacebars.dot(view.lookup(\"spot\"), \"descr\"));\n        }, function() {\n          return [ \" \", Blaze.View(\"lookup:spot.descr\", function() {\n            return Spacebars.mustache(Spacebars.dot(view.lookup(\"spot\"), \"descr\"));\n          }), \" \" ];\n        }, function() {\n          return \" Add description \";\n        });\n      }\n    }), \"\\n      \"), \"\\n      \", HTML.INPUT({\n      type: \"submit\",\n      value: \"Submit\"\n    }), \"\\n    \"), \"\\n    \" ];\n  }, function() {\n    return [ \"\\n    \", HTML.LI(\"\\n      SpotID: \", Blaze.View(\"lookup:spot._id\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"spot\"), \"_id\"));\n    }), \"\\n    \"), \"\\n    \", HTML.LI(\"\\n      UserID: \", Blaze.View(\"lookup:spot.user\", function() {\n      return Spacebars.mustache(Spacebars.dot(view.lookup(\"spot\"), \"user\"));\n    }), \"\\n    \"), \"\\n    \", Blaze.If(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\"spot\"), \"name\"));\n    }, function() {\n      return [ \"\\n    \", HTML.LI(\"\\n      Spot Name \", Blaze.View(\"lookup:spot.name\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"spot\"), \"name\"));\n      }), \"\\n    \"), \"\\n    \" ];\n    }), \"\\n    \", Blaze.If(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\"spot\"), \"type\"));\n    }, function() {\n      return [ \"\\n    \", HTML.LI(\"\\n      Spot Type \", Blaze.View(\"lookup:spot.type\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"spot\"), \"type\"));\n      }), \"\\n    \"), \"\\n    \" ];\n    }), \"\\n    \", Blaze.If(function() {\n      return Spacebars.call(Spacebars.dot(view.lookup(\"spot\"), \"descr\"));\n    }, function() {\n      return [ \"\\n    \", HTML.LI(\"\\n      Spot Description \", Blaze.View(\"lookup:spot.descr\", function() {\n        return Spacebars.mustache(Spacebars.dot(view.lookup(\"spot\"), \"descr\"));\n      }), \"\\n    \"), \"\\n    \" ];\n    }), \"\\n    \" ];\n  }), \"\\n\\n  \");\n}));\n","\nTemplate.__checkName(\"users\");\nTemplate[\"users\"] = new Template(\"Template.users\", (function() {\n  var view = this;\n  return [ HTML.Raw('<p>\\n    Users:\\n  </p>\\n  <form class=\"user\">\\n    <input type=\"text\" name=\"user\" placeholder=\"find users\">\\n  </form>\\n  '), Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"users\"));\n  }, function() {\n    return [ \"\\n    \", HTML.LI(\"\\n      \", Blaze.View(\"lookup:username\", function() {\n      return Spacebars.mustache(view.lookup(\"username\"));\n    }), \"\\n    \"), \"\\n  \" ];\n  }) ];\n}));\n","let MAP_ZOOM = 15;\n\nMeteor.startup(function() {\n  GoogleMaps.load();\n});\n\nTemplate.map.onCreated(function() {\n  let self = this;\n\n  GoogleMaps.ready('map', function(map) {\n    let marker;\n\n    self.autorun(function () {\n      let latLng = Geolocation.latLng();\n      //Write user position to db\n      console.log(latLng);\n      const userId = Meteor.userId();\n      const userPosition = Position.findOne({user: userId});\n\n      if(!userPosition && Meteor.userId()) {\n        Position.insert({\n            user: Meteor.userId(),\n            latLng: latLng\n        });\n      }\n      else {\n        Position.update({_id: userPosition._id}, { $set: {latLng: latLng}});\n      }\n      console.log(userPosition.latLng);\n      //Finished writing user position to db\n      if(! latLng)\n      return;\n\n      if(!marker) {\n        marker = new google.maps.Marker({\n          position: new google.maps.LatLng(latLng.lat, latLng.lng),\n          map: map.instance,\n          icon: '/public/h.pgn'\n        });\n      }\n\n      else {\n        marker.setPosition(latLng);\n      }\n      map.instance.setCenter(marker.getPosition());\n      map.instance.setZoom(MAP_ZOOM);\n\n\n    });\n\n    //Add custom markers on map\n    google.maps.event.addListener(map.instance, 'click', function(event) {\n      Spots.insert({ lat: event.latLng.lat(), lng: event.latLng.lng(), user: Meteor.userId() });\n      console.log(Spots.find().fetch());\n    });\n\n     var markers = {};\n\n    Spots.find().observe({\n      added (document) {\n        let marker = new google.maps.Marker({\n          draggable: true,\n          animation: google.maps.Animation.DROP,\n          position: new google.maps.LatLng(document.lat, document.lng),\n          label: 'S',\n          map: map.instance,\n          id: document._id\n        });\n\n        google.maps.event.addListener(marker, 'dragend', function(event) {\n          Spots.update(marker.id, {$set: {lat: event.latLng.lat(), lng: event.latLng.lng()}});\n        });\n\n        google.maps.event.addListener(marker, 'click', function(event) {\n          let selectedMarker = marker.id;\n          Session.set('place', marker.id);\n          console.log(selectedMarker);\n        });\n        markers[document._id] = marker;\n      },\n      changed: function (newDocument, oldDocument) {\n        markers[newDocument._id].setPosition({lat: newDocument.lat, lng: newDocument.lng});\n      },\n      removed: function (oldDocument) {\n        markers[oldDocument._id].setMap(null);\n        google.maps.event.clearInstanceListeners(markers[oldDocument._id]);\n        delete markers[oldDocument._id];\n      }\n    });\n\n\n  });\n});\n\nTemplate.map.helpers({\n  geolocationError: function () {\n    var error = Geolocation.error();\n    return error && error.message;\n  },\n  mapOptions: function () {\n    var latLng = Geolocation.latLng();\n    if(GoogleMaps.loaded() && latLng) {\n      return {\n        center: new google.maps.LatLng(latLng.lat, latLng.lng),\n        zoom: MAP_ZOOM\n      };\n    }\n  }\n});\n","Template.messagesBlock.helpers({\n  messages: function() {\n    return Messages.find({});\n  }\n});\n\nTemplate.messagesBlock.events({\n  \"submit .new-message\":function (event) {\n    event.preventDefault();\n    var text = event.target.message.value;\n\n    Messages.insert({\n      text: text,\n      createdAt: new Date(),\n      owner: Meteor.userId(),\n      username: Meteor.user().username\n    });\n    event.target.message.value = \"\";\n  }\n});\n\nAccounts.ui.config({\n    passwordSignupFields: \"USERNAME_ONLY\"\n});\n","Template.rooms.helpers({\n  rooms: function() {\n    return Rooms.find({});\n  }\n});\n\nTemplate.rooms.events({\n  \"submit .new-room\":function (event) {\n    event.preventDefault();\n    let roomName = event.target.text.value;\n\n    Rooms.insert({\n      name: roomName,\n      createdAt: new Date(),\n      owner: Meteor.userId(),\n      guests: []\n    });\n    event.target.text.value = \"\";\n  },\n});\n","Template.spot.helpers({\n  spot: function () {\n    return Spots.findOne(Session.get('place'));\n  }\n});\n\nTemplate.spot.events({\n  \"click .addSpot\" () {\n    const spot = Session.get('place');\n    const cheked = Spots.findOne(spot).editing;\n    Spots.update(spot, {$set: {editing: !cheked}});\n    console.log(cheked);\n  },\n  \"submit .new-spot\" (event) {\n    event.preventDefault();\n    const name = event.target.spotName.value;\n    const typeSpot = event.target.spotType.value;\n    const descr = event.target.description.value;\n    const spot = Session.get('place');\n    const cheked = Spots.findOne(spot).editing;\n    Spots.update(spot, {$set: {\n      \"name\": name,\n      \"type\": typeSpot,\n      \"descr\": descr,\n      \"editing\" : !cheked\n    }\n    });\n  }\n\n});\n","Template.users.helpers({\n  users: function() {\n    return Meteor.users.find();\n  }\n});\n\n","Messages = new Mongo.Collection('messages');\nRooms = new Mongo.Collection('rooms');\nPosition = new Mongo.Collection('position');\nSpots = new Mongo.Collection('spots');\n"]}}]