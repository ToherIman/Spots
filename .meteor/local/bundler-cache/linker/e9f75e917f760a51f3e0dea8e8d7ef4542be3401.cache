[{"type":"js","data":"/* Imports for global scope */\n\nMongo = Package.mongo.Mongo;\nSession = Package.session.Session;\n$ = Package.jquery.$;\njQuery = Package.jquery.jQuery;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nDate = Package['es5-shim'].Date;\nparseInt = Package['es5-shim'].parseInt;\nECMAScript = Package.ecmascript.ECMAScript;\nAccounts = Package['accounts-base'].Accounts;\nAccountsClient = Package['accounts-base'].AccountsClient;\nVK = Package['mrt:accounts-vk'].VK;\nMeteor = Package.meteor.Meteor;\nWebApp = Package.webapp.WebApp;\n_ = Package.underscore._;\nDDP = Package['ddp-client'].DDP;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nTemplate = Package.templating.Template;\nbabelHelpers = Package['babel-runtime'].babelHelpers;\nSymbol = Package['ecmascript-runtime'].Symbol;\nMap = Package['ecmascript-runtime'].Map;\nSet = Package['ecmascript-runtime'].Set;\nPromise = Package.promise.Promise;\nServiceConfiguration = Package['service-configuration'].ServiceConfiguration;\nAutoupdate = Package.autoupdate.Autoupdate;\nReload = Package.reload.Reload;\nHTML = Package.htmljs.HTML;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"(function(){\nTemplate.body.addContent((function() {\n  var view = this;\n  return [ Spacebars.include(view.lookupTemplate(\"loginButtons\")), \"\\n  \", HTML.UL(\"\\n    \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"messages\"));\n  }, function() {\n    return [ \"\\n      \", Spacebars.include(view.lookupTemplate(\"message\")), \"\\n    \" ];\n  }), \"\\n  \"), HTML.Raw('\\n  <form class=\"new-message\">\\n    <input type=\"text\" name=\"text\" palceholder=\"Type new message\">\\n  </form>\\n  <form class=\"new-room\">\\n    <input type=\"text\" name=\"text\" palceholder=\"Enter room name\">\\n  </form>') ];\n}));\nMeteor.startup(Template.body.renderToDocument);\n\nTemplate.__checkName(\"message\");\nTemplate[\"message\"] = new Template(\"Template.message\", (function() {\n  var view = this;\n  return HTML.LI(\"\\n   \", Blaze.View(\"lookup:text\", function() {\n    return Spacebars.mustache(view.lookup(\"text\"));\n  }), \" \", Blaze.View(\"lookup:createdAt\", function() {\n    return Spacebars.mustache(view.lookup(\"createdAt\"));\n  }), \" \", Blaze.View(\"lookup:username\", function() {\n    return Spacebars.mustache(view.lookup(\"username\"));\n  }), \"\\n \");\n}));\n\n}).call(this);\n","servePath":"/client/template.index.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/client/template.index.js"],"names":[],"mappings":"YAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"/client/template.index.js","sourcesContent":["\nTemplate.body.addContent((function() {\n  var view = this;\n  return [ Spacebars.include(view.lookupTemplate(\"loginButtons\")), \"\\n  \", HTML.UL(\"\\n    \", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"messages\"));\n  }, function() {\n    return [ \"\\n      \", Spacebars.include(view.lookupTemplate(\"message\")), \"\\n    \" ];\n  }), \"\\n  \"), HTML.Raw('\\n  <form class=\"new-message\">\\n    <input type=\"text\" name=\"text\" palceholder=\"Type new message\">\\n  </form>\\n  <form class=\"new-room\">\\n    <input type=\"text\" name=\"text\" palceholder=\"Enter room name\">\\n  </form>') ];\n}));\nMeteor.startup(Template.body.renderToDocument);\n\nTemplate.__checkName(\"message\");\nTemplate[\"message\"] = new Template(\"Template.message\", (function() {\n  var view = this;\n  return HTML.LI(\"\\n   \", Blaze.View(\"lookup:text\", function() {\n    return Spacebars.mustache(view.lookup(\"text\"));\n  }), \" \", Blaze.View(\"lookup:createdAt\", function() {\n    return Spacebars.mustache(view.lookup(\"createdAt\"));\n  }), \" \", Blaze.View(\"lookup:username\", function() {\n    return Spacebars.mustache(view.lookup(\"username\"));\n  }), \"\\n \");\n}));\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// lib/collections.js                                                  //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nMessages = new Mongo.Collection('messages');                           // 1\nRooms = new Mongo.Collection('messages');                              // 2\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/lib/collections.js","sourceMap":{"version":3,"sources":["/lib/collections.js"],"names":[],"mappings":";;;;;;;;AAAA,QAAQ,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;AAC5C,KAAK,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,kC","file":"/lib/collections.js","sourcesContent":["Messages = new Mongo.Collection('messages');\nRooms = new Mongo.Collection('messages');\n"]}},{"type":"js","data":"(function(){\n\n/////////////////////////////////////////////////////////////////////////\n//                                                                     //\n// client/client.js                                                    //\n//                                                                     //\n/////////////////////////////////////////////////////////////////////////\n                                                                       //\nTemplate.body.helpers({                                                // 1\n  messages: function () {                                              // 2\n    return Messages.find({});                                          // 3\n  }                                                                    //\n});                                                                    //\n                                                                       //\nTemplate.body.events({                                                 // 7\n  \"submit .new-message\": function (event) {                            // 8\n    var text = event.target.text.value;                                // 9\n                                                                       //\n    Messages.insert({                                                  // 11\n      text: text,                                                      // 12\n      createdAt: new Date(),                                           // 13\n      owner: Meteor.userId(),                                          // 14\n      username: Meteor.user().username                                 // 15\n    });                                                                //\n    event.target.text.value = \"\";                                      // 17\n  },                                                                   //\n  \"submit .new-room\": function (evetn) {                               // 19\n    var roomName = event.target.text.value;                            // 20\n                                                                       //\n    Rooms.insert({                                                     // 22\n      name: text,                                                      // 23\n      createdAt: new Date(),                                           // 24\n      owner: Meteor.userId()                                           // 25\n    });                                                                //\n    event.target.text.value = \"\";                                      // 27\n  }                                                                    //\n});                                                                    //\n                                                                       //\nAccounts.ui.config({                                                   // 31\n  passwordSignupFields: \"USERNAME_ONLY\"                                // 32\n});                                                                    //\n/////////////////////////////////////////////////////////////////////////\n\n}).call(this);\n","servePath":"/client/client.js","sourceMap":{"version":3,"sources":["meteor://ðŸ’»app/client/client.js"],"names":[],"mappings":";;;;;;;;AAAA,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC;AACpB,UAAQ,EAAE,YAAW;AACnB,WAAO,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;GAC1B;CACF,CAAC,CAAC;;AAEH,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC;AACnB,uBAAqB,EAAC,UAAU,KAAK,EAAE;AACrC,QAAI,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;;AAEnC,YAAQ,CAAC,MAAM,CAAC;AACd,UAAI,EAAE,IAAI;AACV,eAAS,EAAE,IAAI,IAAI,EAAE;AACrB,WAAK,EAAE,MAAM,CAAC,MAAM,EAAE;AACtB,cAAQ,EAAE,MAAM,CAAC,IAAI,EAAE,CAAC,QAAQ;KACjC,CAAC;AACF,SAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;GAC9B;AACD,oBAAkB,EAAC,UAAU,KAAK,EAAE;AAClC,QAAI,QAAQ,GAAG,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC;;AAEvC,SAAK,CAAC,MAAM,CAAC;AACX,UAAI,EAAE,IAAI;AACV,eAAS,EAAE,IAAI,IAAI,EAAE;AACrB,WAAK,EAAE,MAAM,CAAC,MAAM,EAAE;KACvB,CAAC;AACF,SAAK,CAAC,MAAM,CAAC,IAAI,CAAC,KAAK,GAAC,EAAE,CAAC;GAC5B;CACF,CAAC,CAAC;;AAEH,QAAQ,CAAC,EAAE,CAAC,MAAM,CAAC;AACf,sBAAoB,EAAE,eAAe;CACxC,CAAC,CAAC,sE","file":"/client/client.js","sourcesContent":["Template.body.helpers({\n  messages: function() {\n    return Messages.find({});\n  }\n});\n\nTemplate.body.events({\n  \"submit .new-message\":function (event) {\n    var text = event.target.text.value;\n\n    Messages.insert({\n      text: text,\n      createdAt: new Date(),\n      owner: Meteor.userId(),\n      username: Meteor.user().username\n    })\n    event.target.text.value = \"\";\n  },\n  \"submit .new-room\":function (evetn) {\n    var roomName = event.target.text.value;\n\n    Rooms.insert({\n      name: text,\n      createdAt: new Date(),\n      owner: Meteor.userId(),\n    })\n    event.target.text.value=\"\";\n  }\n});\n\nAccounts.ui.config({\n    passwordSignupFields: \"USERNAME_ONLY\"\n});\n"]}}]