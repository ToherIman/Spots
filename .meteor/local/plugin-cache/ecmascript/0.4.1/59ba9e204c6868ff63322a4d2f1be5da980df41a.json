{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/map.js","filenameRelative":"/client/map.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/map.js.map","sourceFileName":"/client/map.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"map"},"ignored":false,"code":"var MAP_ZOOM = 15;\n\nMeteor.startup(function () {\n  GoogleMaps.load();\n});\n\nTemplate.map.onCreated(function () {\n  var self = this;\n\n  GoogleMaps.ready('map', function (map) {\n    var marker = void 0;\n\n    self.autorun(function () {\n      var latLng = Geolocation.latLng();\n      console.log(latLng);\n      Position.insert({\n        userId: Meteor.userId,\n        lat: latLng.lat,\n        lng: latLng.lng\n      });\n\n      if (!latLng) return;\n\n      if (!marker) {\n        marker = new google.maps.Marker({\n          position: new google.maps.LatLng(latLng.lat, latLng.lng),\n          map: map.instance\n        });\n      } else {\n        marker.setPosition(latLng);\n      }\n      map.instance.setCenter(marker.getPosition());\n      map.instance.setZoom(MAP_ZOOM);\n    });\n  });\n});\n\nTemplate.map.helpers({\n  geolocationError: function () {\n    function geolocationError() {\n      var error = Geolocation.error();\n      return error && error.message;\n    }\n\n    return geolocationError;\n  }(),\n  mapOptions: function () {\n    function mapOptions() {\n      var latLng = Geolocation.latLng();\n      if (GoogleMaps.loaded() && latLng) {\n        return {\n          center: new google.maps.LatLng(latLng.lat, latLng.lng),\n          zoom: MAP_ZOOM\n        };\n      }\n    }\n\n    return mapOptions;\n  }()\n});","ast":null,"map":{"version":3,"sources":["/client/map.js"],"names":[],"mappings":"AAAA,IAAI,WAAW,EAAX;;AAEJ,OAAO,OAAP,CAAe,YAAW;AACxB,aAAW,IAAX,GADwB;CAAX,CAAf;;AAIA,SAAS,GAAT,CAAa,SAAb,CAAuB,YAAW;AAChC,MAAI,OAAO,IAAP,CAD4B;;AAIhC,aAAW,KAAX,CAAiB,KAAjB,EAAwB,UAAS,GAAT,EAAc;AACpC,QAAI,eAAJ,CADoC;;AAGpC,SAAK,OAAL,CAAa,YAAY;AACvB,UAAI,SAAS,YAAY,MAAZ,EAAT,CADmB;AAEvB,cAAQ,GAAR,CAAY,MAAZ,EAFuB;AAGvB,eAAS,MAAT,CAAgB;AACZ,gBAAQ,OAAO,MAAP;AACR,aAAK,OAAO,GAAP;AACL,aAAK,OAAO,GAAP;OAHT,EAHuB;;AASvB,UAAG,CAAE,MAAF,EACH,OADA;;AAGA,UAAG,CAAC,MAAD,EAAS;AACV,iBAAS,IAAI,OAAO,IAAP,CAAY,MAAZ,CAAmB;AAC9B,oBAAU,IAAI,OAAO,IAAP,CAAY,MAAZ,CAAmB,OAAO,GAAP,EAAY,OAAO,GAAP,CAA7C;AACA,eAAK,IAAI,QAAJ;SAFE,CAAT,CADU;OAAZ,MAOK;AACH,eAAO,WAAP,CAAmB,MAAnB,EADG;OAPL;AAUA,UAAI,QAAJ,CAAa,SAAb,CAAuB,OAAO,WAAP,EAAvB,EAtBuB;AAuBvB,UAAI,QAAJ,CAAa,OAAb,CAAqB,QAArB,EAvBuB;KAAZ,CAAb,CAHoC;GAAd,CAAxB,CAJgC;CAAX,CAAvB;;AAwCA,SAAS,GAAT,CAAa,OAAb,CAAqB;AACnB;AAAkB,gCAAY;AAC5B,UAAI,QAAQ,YAAY,KAAZ,EAAR,CADwB;AAE5B,aAAO,SAAS,MAAM,OAAN,CAFY;KAAZ;;;KAAlB;AAIA;AAAY,0BAAY;AACtB,UAAI,SAAS,YAAY,MAAZ,EAAT,CADkB;AAEtB,UAAG,WAAW,MAAX,MAAuB,MAAvB,EAA+B;AAChC,eAAO;AACL,kBAAQ,IAAI,OAAO,IAAP,CAAY,MAAZ,CAAmB,OAAO,GAAP,EAAY,OAAO,GAAP,CAA3C;AACA,gBAAM,QAAN;SAFF,CADgC;OAAlC;KAFU;;;KAAZ;CALF","file":"/client/map.js.map","sourcesContent":["let MAP_ZOOM = 15;\n\nMeteor.startup(function() {\n  GoogleMaps.load();\n});\n\nTemplate.map.onCreated(function() {\n  let self = this;\n\n\n  GoogleMaps.ready('map', function(map) {\n    let marker;\n\n    self.autorun(function () {\n      let latLng = Geolocation.latLng();\n      console.log(latLng);\n      Position.insert({\n          userId: Meteor.userId,\n          lat: latLng.lat,\n          lng: latLng.lng\n      })\n\n      if(! latLng)\n      return;\n\n      if(!marker) {\n        marker = new google.maps.Marker({\n          position: new google.maps.LatLng(latLng.lat, latLng.lng),\n          map: map.instance\n        });\n      }\n\n      else {\n        marker.setPosition(latLng);\n      }\n      map.instance.setCenter(marker.getPosition());\n      map.instance.setZoom(MAP_ZOOM);\n\n\n    });\n\n\n\n  });\n});\n\nTemplate.map.helpers({\n  geolocationError: function () {\n    var error = Geolocation.error();\n    return error && error.message;\n  },\n  mapOptions: function () {\n    var latLng = Geolocation.latLng();\n    if(GoogleMaps.loaded() && latLng) {\n      return {\n        center: new google.maps.LatLng(latLng.lat, latLng.lng),\n        zoom: MAP_ZOOM\n      };\n    }\n  }\n});\n"]},"hash":"59ba9e204c6868ff63322a4d2f1be5da980df41a"}
