{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/messages.js","filenameRelative":"/client/messages.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/messages.js.map","sourceFileName":"/client/messages.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"messages"},"ignored":false,"code":"Template.messagesBlock.helpers({\n  messages: function () {\n    function messages() {\n      var room = Session.get('room');\n      if (room) {\n        return Messages.find({ room: room }, { limit: 20 });\n      } else {\n        return Messages.find({ room: undefined }, { sort: { createdAt: 1 } }, { limit: 15 });\n      }\n    }\n\n    return messages;\n  }()\n});\n\nTemplate.messagesBlock.onRendered(function () {\n  $(window).scrollTop(99);\n});\n\nTemplate.messagesBlock.events({\n  \"submit .new-message\": function () {\n    function submitNewMessage(event) {\n      event.preventDefault();\n      var text = event.target.message.value;\n      var room = Session.get('room');\n\n      Messages.insert({\n        text: text,\n        createdAt: new Date(),\n        owner: Meteor.userId(),\n        username: Meteor.user().username,\n        room: room\n      });\n      event.target.message.value = \"\";\n    }\n\n    return submitNewMessage;\n  }()\n});\n\nAccounts.ui.config({\n  passwordSignupFields: \"USERNAME_ONLY\"\n});\n\nTemplate.message.helpers({\n  dateFormat: function () {\n    function dateFormat(time) {\n      var date = new Date(time);\n      var hours = \"0\" + date.getHours();\n      var minutes = \"0\" + date.getMinutes();\n      var seconds = \"0\" + date.getSeconds();\n      var day = \"0\" + date.getDate();\n      var month = \"0\" + date.getMonth();\n      var year = date.getFullYear();\n      var out = \"\";\n      var now = new Date();\n      if (now - time > 86400000) {\n        out = day.substr(day.length - 2) + \".\" + month.substr(day.length - 2) + \".\" + year;\n      } else {\n        out = hours.substr(hours.length - 2) + \":\" + minutes.substr(minutes.length - 2) + \":\" + seconds.substr(seconds.length - 2);\n      }\n      return out;\n    }\n\n    return dateFormat;\n  }()\n});","ast":null,"map":{"version":3,"sources":["/client/messages.js"],"names":[],"mappings":"AAAA,SAAS,aAAT,CAAuB,OAAvB,CAA+B;AAC7B,UAD6B;AAAA,wBACjB;AACV,UAAM,OAAO,QAAQ,GAAR,CAAY,MAAZ,CAAb;AACA,UAAG,IAAH,EAAS;AACP,eAAO,SAAS,IAAT,CAAc,EAAC,MAAM,IAAP,EAAd,EAA4B,EAAC,OAAO,EAAR,EAA5B,CAAP;AACD,OAFD,MAEO;AACL,eAAO,SAAS,IAAT,CAAc,EAAC,MAAM,SAAP,EAAd,EAAkC,EAAE,MAAM,EAAE,WAAW,CAAb,EAAR,EAAlC,EAA6D,EAAC,OAAO,EAAR,EAA7D,CAAP;AACD;AACF;;AAR4B;AAAA;AAAA,CAA/B;;AAWA,SAAS,aAAT,CAAuB,UAAvB,CAAkC,YAAY;AAC5C,IAAE,MAAF,EAAU,SAAV,CAAoB,EAApB;AACD,CAFD;;AAKA,SAAS,aAAT,CAAuB,MAAvB,CAA8B;AAC5B,uBAD4B;AAAA,8BACL,KADK,EACE;AAC5B,YAAM,cAAN;AACA,UAAM,OAAO,MAAM,MAAN,CAAa,OAAb,CAAqB,KAAlC;AACA,UAAM,OAAO,QAAQ,GAAR,CAAY,MAAZ,CAAb;;AAEA,eAAS,MAAT,CAAgB;AACd,cAAM,IADQ;AAEd,mBAAW,IAAI,IAAJ,EAFG;AAGd,eAAO,OAAO,MAAP,EAHO;AAId,kBAAU,OAAO,IAAP,GAAc,QAJV;AAKd,cAAM;AALQ,OAAhB;AAOA,YAAM,MAAN,CAAa,OAAb,CAAqB,KAArB,GAA6B,EAA7B;AACD;;AAd2B;AAAA;AAAA,CAA9B;;AAiBA,SAAS,EAAT,CAAY,MAAZ,CAAmB;AACf,wBAAsB;AADP,CAAnB;;AAIA,SAAS,OAAT,CAAiB,OAAjB,CAAyB;AACvB,YADuB;AAAA,wBACX,IADW,EACL;AAChB,UAAM,OAAO,IAAI,IAAJ,CAAU,IAAV,CAAb;AACA,UAAM,QAAQ,MAAM,KAAK,QAAL,EAApB;AACA,UAAM,UAAU,MAAM,KAAK,UAAL,EAAtB;AACA,UAAM,UAAU,MAAM,KAAK,UAAL,EAAtB;AACA,UAAM,MAAM,MAAM,KAAK,OAAL,EAAlB;AACA,UAAM,QAAQ,MAAM,KAAK,QAAL,EAApB;AACA,UAAM,OAAO,KAAK,WAAL,EAAb;AACA,UAAI,MAAM,EAAV;AACA,UAAM,MAAM,IAAI,IAAJ,EAAZ;AACA,UAAI,MAAI,IAAJ,GAAS,QAAb,EAAuB;AACrB,cAAM,IAAI,MAAJ,CAAW,IAAI,MAAJ,GAAa,CAAxB,IAA6B,GAA7B,GAAmC,MAAM,MAAN,CAAa,IAAI,MAAJ,GAAa,CAA1B,CAAnC,GAAkE,GAAlE,GAAwE,IAA9E;AACD,OAFD,MAEO;AACL,cAAM,MAAM,MAAN,CAAa,MAAM,MAAN,GAAe,CAA5B,IAAiC,GAAjC,GAAuC,QAAQ,MAAR,CAAe,QAAQ,MAAR,GAAiB,CAAhC,CAAvC,GAA4E,GAA5E,GAAkF,QAAQ,MAAR,CAAe,QAAQ,MAAR,GAAiB,CAAhC,CAAxF;AACD;AACD,aAAO,GAAP;AACD;;AAjBsB;AAAA;AAAA,CAAzB","file":"/client/messages.js.map","sourcesContent":["Template.messagesBlock.helpers({\n  messages () {\n    const room = Session.get('room');\n    if(room) {\n      return Messages.find({room: room}, {limit: 20});\n    } else {\n      return Messages.find({room: undefined},  { sort: { createdAt: 1} }, {limit: 15});\n    }\n  }\n});\n\nTemplate.messagesBlock.onRendered(function () {\n  $(window).scrollTop(99);\n});\n\n\nTemplate.messagesBlock.events({\n  \"submit .new-message\" (event) {\n    event.preventDefault();\n    const text = event.target.message.value;\n    const room = Session.get('room');\n\n    Messages.insert({\n      text: text,\n      createdAt: new Date(),\n      owner: Meteor.userId(),\n      username: Meteor.user().username,\n      room: room\n    });\n    event.target.message.value = \"\";\n  }\n});\n\nAccounts.ui.config({\n    passwordSignupFields: \"USERNAME_ONLY\"\n});\n\nTemplate.message.helpers({\n  dateFormat (time) {\n    const date = new Date (time);\n    const hours = \"0\" + date.getHours();\n    const minutes = \"0\" + date.getMinutes();\n    const seconds = \"0\" + date.getSeconds();\n    const day = \"0\" + date.getDate();\n    const month = \"0\" + date.getMonth();\n    const year = date.getFullYear();\n    let out = \"\";\n    const now = new Date();\n    if (now-time>86400000) {\n      out = day.substr(day.length - 2) + \".\" + month.substr(day.length - 2) + \".\" + year;\n    } else {\n      out = hours.substr(hours.length - 2) + \":\" + minutes.substr(minutes.length - 2) + \":\" + seconds.substr(seconds.length - 2);\n    }\n    return out;\n  }\n});\n"]},"hash":"e4360e59173123c405dd37f85027d15035b5295b"}
