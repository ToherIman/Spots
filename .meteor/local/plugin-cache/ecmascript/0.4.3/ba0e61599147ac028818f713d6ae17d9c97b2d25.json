{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"/client/messages.js","filenameRelative":"/client/messages.js","env":{},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":false,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"/client/messages.js.map","sourceFileName":"/client/messages.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"basename":"messages"},"ignored":false,"code":"Template.messagesBlock.helpers({\n  messages: function () {\n    function messages() {\n      return Messages.find({});\n    }\n\n    return messages;\n  }()\n});\n\nTemplate.messagesBlock.events({\n  \"submit .new-message\": function () {\n    function submitNewMessage(event) {\n      event.preventDefault();\n      var text = event.target.message.value;\n      var room = Session.get('room');\n\n      Messages.insert({\n        text: text,\n        createdAt: new Date(),\n        owner: Meteor.userId(),\n        username: Meteor.user().username,\n        room: room\n      });\n      event.target.message.value = \"\";\n    }\n\n    return submitNewMessage;\n  }()\n});\n\nAccounts.ui.config({\n  passwordSignupFields: \"USERNAME_ONLY\"\n});\n\nTemplate.message.helpers({\n  dateFormat: function () {\n    function dateFormat(time) {\n      var date = new Date(time);\n      var hours = \"0\" + date.getHours();\n      var minutes = \"0\" + date.getMinutes();\n      var seconds = \"0\" + date.getSeconds();\n      var day = \"0\" + date.getDate();\n      var month = \"0\" + date.getMonth();\n      var year = date.getFullYear();\n      var out = \"\";\n      var now = new Date();\n      if (now - time > 86400000) {\n        out = day.substr(day.length - 2) + \".\" + month.substr(day.length - 2) + \".\" + year;\n      } else {\n        out = hours.substr(hours.length - 2) + \":\" + minutes.substr(minutes.length - 2) + \":\" + seconds.substr(seconds.length - 2);\n      }\n      return out;\n    }\n\n    return dateFormat;\n  }()\n});","ast":null,"map":{"version":3,"sources":["/client/messages.js"],"names":[],"mappings":"AAAA,SAAS,aAAT,CAAuB,OAAvB,CAA+B;AAC7B;wBAAY;AACV,aAAO,SAAS,IAAT,CAAc,EAAd,CAAP,CADU;;;;KADiB;CAA/B;;AAMA,SAAS,aAAT,CAAuB,MAAvB,CAA8B;AAC5B;8BAAuB,OAAO;AAC5B,YAAM,cAAN,GAD4B;AAE5B,UAAM,OAAO,MAAM,MAAN,CAAa,OAAb,CAAqB,KAArB,CAFe;AAG5B,UAAM,OAAO,QAAQ,GAAR,CAAY,MAAZ,CAAP,CAHsB;;AAK5B,eAAS,MAAT,CAAgB;AACd,cAAM,IAAN;AACA,mBAAW,IAAI,IAAJ,EAAX;AACA,eAAO,OAAO,MAAP,EAAP;AACA,kBAAU,OAAO,IAAP,GAAc,QAAd;AACV,cAAM,IAAN;OALF,EAL4B;AAY5B,YAAM,MAAN,CAAa,OAAb,CAAqB,KAArB,GAA6B,EAA7B,CAZ4B;;;;KADF;CAA9B;;AAiBA,SAAS,EAAT,CAAY,MAAZ,CAAmB;AACf,wBAAsB,eAAtB;CADJ;;AAIA,SAAS,OAAT,CAAiB,OAAjB,CAAyB;AACvB;wBAAY,MAAM;AAChB,UAAM,OAAO,IAAI,IAAJ,CAAU,IAAV,CAAP,CADU;AAEhB,UAAM,QAAQ,MAAM,KAAK,QAAL,EAAN,CAFE;AAGhB,UAAM,UAAU,MAAM,KAAK,UAAL,EAAN,CAHA;AAIhB,UAAM,UAAU,MAAM,KAAK,UAAL,EAAN,CAJA;AAKhB,UAAM,MAAM,MAAM,KAAK,OAAL,EAAN,CALI;AAMhB,UAAM,QAAQ,MAAM,KAAK,QAAL,EAAN,CANE;AAOhB,UAAM,OAAO,KAAK,WAAL,EAAP,CAPU;AAQhB,UAAI,MAAM,EAAN,CARY;AAShB,UAAM,MAAM,IAAI,IAAJ,EAAN,CATU;AAUhB,UAAI,MAAI,IAAJ,GAAS,QAAT,EAAmB;AACrB,cAAM,IAAI,MAAJ,CAAW,IAAI,MAAJ,GAAa,CAAb,CAAX,GAA6B,GAA7B,GAAmC,MAAM,MAAN,CAAa,IAAI,MAAJ,GAAa,CAAb,CAAhD,GAAkE,GAAlE,GAAwE,IAAxE,CADe;OAAvB,MAEO;AACL,cAAM,MAAM,MAAN,CAAa,MAAM,MAAN,GAAe,CAAf,CAAb,GAAiC,GAAjC,GAAuC,QAAQ,MAAR,CAAe,QAAQ,MAAR,GAAiB,CAAjB,CAAtD,GAA4E,GAA5E,GAAkF,QAAQ,MAAR,CAAe,QAAQ,MAAR,GAAiB,CAAjB,CAAjG,CADD;OAFP;AAKA,aAAO,GAAP,CAfgB;;;;KADK;CAAzB","file":"/client/messages.js.map","sourcesContent":["Template.messagesBlock.helpers({\n  messages () {\n    return Messages.find({});\n  }\n});\n\nTemplate.messagesBlock.events({\n  \"submit .new-message\" (event) {\n    event.preventDefault();\n    const text = event.target.message.value;\n    const room = Session.get('room');\n\n    Messages.insert({\n      text: text,\n      createdAt: new Date(),\n      owner: Meteor.userId(),\n      username: Meteor.user().username,\n      room: room\n    });\n    event.target.message.value = \"\";\n  }\n});\n\nAccounts.ui.config({\n    passwordSignupFields: \"USERNAME_ONLY\"\n});\n\nTemplate.message.helpers({\n  dateFormat (time) {\n    const date = new Date (time);\n    const hours = \"0\" + date.getHours();\n    const minutes = \"0\" + date.getMinutes();\n    const seconds = \"0\" + date.getSeconds();\n    const day = \"0\" + date.getDate();\n    const month = \"0\" + date.getMonth();\n    const year = date.getFullYear();\n    let out = \"\";\n    const now = new Date();\n    if (now-time>86400000) {\n      out = day.substr(day.length - 2) + \".\" + month.substr(day.length - 2) + \".\" + year;\n    } else {\n      out = hours.substr(hours.length - 2) + \":\" + minutes.substr(minutes.length - 2) + \":\" + seconds.substr(seconds.length - 2);\n    }\n    return out;\n  }\n});\n"]},"hash":"ba0e61599147ac028818f713d6ae17d9c97b2d25"}
